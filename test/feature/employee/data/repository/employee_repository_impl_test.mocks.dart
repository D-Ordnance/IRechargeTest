// Mocks generated by Mockito 5.4.2 from annotations
// in mobile_assessment/test/feature/employee/data/repository/employee_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:mobile_assessment/core/network/network_info.dart' as _i6;
import 'package:mobile_assessment/feature/employee/data/datasource/employee_datasource.dart'
    as _i4;
import 'package:mobile_assessment/feature/employee/data/model/employee_data.dart'
    as _i3;
import 'package:mobile_assessment/feature/employee/domain/entity/employee_entity.dart'
    as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEmployeeEntity_0 extends _i1.SmartFake
    implements _i2.EmployeeEntity {
  _FakeEmployeeEntity_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeEmployeeData_1 extends _i1.SmartFake implements _i3.EmployeeData {
  _FakeEmployeeData_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [EmployeeDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockEmployeeDataSource extends _i1.Mock
    implements _i4.EmployeeDataSource {
  @override
  _i5.Future<_i2.EmployeeEntity> remoteDataSource() => (super.noSuchMethod(
        Invocation.method(
          #remoteDataSource,
          [],
        ),
        returnValue: _i5.Future<_i2.EmployeeEntity>.value(_FakeEmployeeEntity_0(
          this,
          Invocation.method(
            #remoteDataSource,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i2.EmployeeEntity>.value(_FakeEmployeeEntity_0(
          this,
          Invocation.method(
            #remoteDataSource,
            [],
          ),
        )),
      ) as _i5.Future<_i2.EmployeeEntity>);

  @override
  _i5.Future<_i2.EmployeeEntity> localDataSource() => (super.noSuchMethod(
        Invocation.method(
          #localDataSource,
          [],
        ),
        returnValue: _i5.Future<_i2.EmployeeEntity>.value(_FakeEmployeeEntity_0(
          this,
          Invocation.method(
            #localDataSource,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i2.EmployeeEntity>.value(_FakeEmployeeEntity_0(
          this,
          Invocation.method(
            #localDataSource,
            [],
          ),
        )),
      ) as _i5.Future<_i2.EmployeeEntity>);

  @override
  _i5.Future<void> saveToLocal(List<_i3.EmployeeData>? employee) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveToLocal,
          [employee],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<_i3.EmployeeData> getEmployeeByIdLocalDataSource(int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getEmployeeByIdLocalDataSource,
          [id],
        ),
        returnValue: _i5.Future<_i3.EmployeeData>.value(_FakeEmployeeData_1(
          this,
          Invocation.method(
            #getEmployeeByIdLocalDataSource,
            [id],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i3.EmployeeData>.value(_FakeEmployeeData_1(
          this,
          Invocation.method(
            #getEmployeeByIdLocalDataSource,
            [id],
          ),
        )),
      ) as _i5.Future<_i3.EmployeeData>);

  @override
  _i5.Future<_i2.EmployeeEntity> filterEmployeeByKeyslocalDataSource(
          Map<String, String>? keys) =>
      (super.noSuchMethod(
        Invocation.method(
          #filterEmployeeByKeyslocalDataSource,
          [keys],
        ),
        returnValue: _i5.Future<_i2.EmployeeEntity>.value(_FakeEmployeeEntity_0(
          this,
          Invocation.method(
            #filterEmployeeByKeyslocalDataSource,
            [keys],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i2.EmployeeEntity>.value(_FakeEmployeeEntity_0(
          this,
          Invocation.method(
            #filterEmployeeByKeyslocalDataSource,
            [keys],
          ),
        )),
      ) as _i5.Future<_i2.EmployeeEntity>);
}

/// A class which mocks [NetworkInfo].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkInfo extends _i1.Mock implements _i6.NetworkInfo {
  @override
  _i5.Future<bool> get isConnected => (super.noSuchMethod(
        Invocation.getter(#isConnected),
        returnValue: _i5.Future<bool>.value(false),
        returnValueForMissingStub: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);
}
